
crie uma função que vai receber dois obijetos e vai retonar um, como deve funcionar a função: os dois objetos vão ser desestruturados e cada elemento vai ser comparado um ao outro, os objetos possuem esses elementos neles:
                Tdoos os elementos: "title: data.Title,          // Título
                released: data.Released,    // Data de lançamento
                runtime: data.Runtime,      // Duração
                director: data.Director,    // Diretor
                writer: data.Writer,        // Roteirista
                actors: data.Actors,        // Elenco
                genre: data.Genre,          // Gênero
                country: data.Country,      // País de origem
                ratings: data.Ratings,      // Avaliações
                plot: data.Plot,            // Descrição
                boxOffice: data.BoxOffice,  // Bilheteria
                production: data.Production,// Produtora
                poster: data.Poster         // URL do pôster"

Esses objetos vão ter cido criados por uma função que usa a API do IMDb essa função:

async function descMovie(titulo) {
    // Armazena o título do filme na variável 'movieTitle' 
    let movieTitle = titulo

    // Chave de API do OMDb para autenticação
    const apiKey = '8f23043c'

    // URL da API OMDb para buscar informações do filme, com o título do filme codificado para a URL
    const url = `https://www.omdbapi.com/?t=${encodeURIComponent(movieTitle)}&apikey=${apiKey}`
    
    try {
        // Realiza a requisição HTTP à URL da API OMDb
        const response = await fetch(url)
        
        // Converte a resposta da API em formato JSON
        const data = await response.json()
        
        // Verifica se a resposta da API foi bem-sucedida (data.Response === "True")
        if (data.Response === "True") {
            // Exibe as informações do filme no console
            // console.log("Título:", data.Title)
            // console.log("Ano de Lançamento:", data.Year)
            // console.log("Data de Lançamento:", data.Released)
            // console.log("Tempo de duração:", data.Runtime)

            // console.log("Diretor:", data.Director)
            // console.log("Roterista/escritor:", data.Writer)
            // console.log("Atores:", data.Actors)

            // console.log("Gênero:", data.Genre)
            // console.log("País:", data.Country)
            // console.log("Avaliações:", data.Ratings)
            // console.log("Descrição", data.Plot)
            // console.log("Belheteria:", data.BoxOffice)

            // console.log("Pôster:", data.Poster)

            // Retorna um objeto com todas as informações detalhadas do filme
            return {
                title: data.Title,          // Título
                released: data.Released,    // Data de lançamento
                runtime: data.Runtime,      // Duração
                director: data.Director,    // Diretor
                writer: data.Writer,        // Roteirista
                actors: data.Actors,        // Elenco
                genre: data.Genre,          // Gênero
                country: data.Country,      // País de origem
                ratings: data.Ratings,      // Avaliações
                plot: data.Plot,            // Descrição
                boxOffice: data.BoxOffice,  // Bilheteria
                production: data.Production,// Produtora
                poster: data.Poster         // URL do pôster
            };
        } else {
            // Se a resposta da API não for bem-sucedida, exibe o erro retornado pela API
            console.log("Erro:", data.Error)
            return null // Retorna 'null' se não encontrar o filme
        }
    } catch (error) {
        // Captura e exibe qualquer erro que ocorra durante a requisição
        console.error("Erro na requisição:", error)
        return null // Retorna 'null' se houver erro na requisição
    }
}

COMO vai ser o funcionamento:

var titulo1 = descMovie('Prikolica SPI-90')
var titulo2 = descMovie('Iron Man 3')

ComparacaoDeFilme(titulo1, titulo2)

O resultado final tem que funciona parecido como nesse exemplo, "ComparacaoDeFilme" é a função que você vai criados
As condições de comparação são essas:


Porém 'poster' e 'plot' não vão ser comparados, e o objeto que sair dessa função vai ter todos esses elementos (tirando 'poster' e 'plot), e cada elemento vai ser um 'arry'.
O 'title' dos dois objetos vão ser comparados se eles forem iguais, o 'arry' de 'title' que vai retornar primeiro 'true' depois o 'title' do segundo objeto. Se forem diferente é para voltar 'false' como primeiro valor depois o 'title' do segundo objeto, se um dois 'title' tiver vazio é para voltar 'null' primeiro valor depois uma mensagem se é o primeiro ou segundo objeto que tá vazio ou são os dois.
Em 'released' vai compara as duas datas, se forem iguais é para voltar 'true' como priemiro valor depois o 'released' do segundo objeto, e depois um sinal de '='. Se forem diferente é para voltar 'false' como primeiro valor depois o 'released' do segundo objeto, e depois um sinal de '<' ou '>' depedendo se o 'released' do segundo objeto foi antes ou depois do 'released' do primeiro objeto. Se um dois 'released' tiver vazio é para voltar 'null' primeiro valor depois uma mensagem se é o primeiro ou segundo objeto que tá vazio ou são os dois e treciero voltar '---'.
Em 'runtime' vai compara as duas durações, se forem iguais é para voltar 'true' como priemiro valor depois o 'runtime' do segundo objeto, e depois um sinal de '='. Se forem diferente é para voltar 'false' como primeiro valor depois o 'runtime' do segundo objeto, e depois um sinal de '<' ou '>' depedendo se o 'runtime' do segundo objeto foi antes ou depois do 'runtime' do primeiro objeto. Se um dois 'runtime' tiver vazio é para voltar 'null' primeiro valor depois uma mensagem se é o primeiro ou segundo objeto que tá vazio ou são os dois e treciero voltar '---'.
Em 'director' pode ter mais que um, então precisa compara todos os elementos em 'director', e retornar 'true' ou 'false' e o nome de um 'director' do segundo objeto, 'true' se o 'director' do segundo objeto tambem existir no primeiro, e 'false' se o 'director' do segundo objeto não existir no primeiro, isso para cada elemento dentro de 'director', Se um dois 'director' tiver vazio é para voltar 'null' primeiro valor depois uma mensagem se é o primeiro ou segundo objeto que tá vazio ou são os dois.
Em 'writer' pode ter mais que um, então precisa compara todos os elementos em 'writer', e retornar 'true' ou 'false' e o nome de um 'writer' do segundo objeto, 'true' se o 'writer' do segundo objeto tambem existir no primeiro, e 'false' se o 'writer' do segundo objeto não existir no primeiro, isso para cada elemento dentro de 'writer', Se um dois 'writer' tiver vazio é para voltar 'null' primeiro valor depois uma mensagem se é o primeiro ou segundo objeto que tá vazio ou são os dois.
Em 'actors' pode ter mais que um, então precisa compara todos os elementos em 'actors', e retornar 'true' ou 'false' e o nome de um 'actors' do segundo objeto, 'true' se o 'actors' do segundo objeto tambem existir no primeiro, e 'false' se o 'actors' do segundo objeto não existir no primeiro, isso para cada elemento dentro de 'actors', Se um dois 'actors' tiver vazio é para voltar 'null' primeiro valor depois uma mensagem se é o primeiro ou segundo objeto que tá vazio ou são os dois.
Em 'genre' pode ter mais que um, então precisa compara todos os elementos em 'genre', e retornar 'true' ou 'false' e o nome de um 'genre' do segundo objeto, 'true' se o 'genre' do segundo objeto tambem existir no primeiro, e 'false' se o 'genre' do segundo objeto não existir no primeiro, isso para cada elemento dentro de 'genre', Se um dois 'genre' tiver vazio é para voltar 'null' primeiro valor depois uma mensagem se é o primeiro ou segundo objeto que tá vazio ou são os dois.
Em 'country' pode ter mais que um, então precisa compara todos os elementos em 'country', e retornar 'true' ou 'false' e o nome de um 'country' do segundo objeto, 'true' se o 'country' do segundo objeto tambem existir no primeiro, e 'false' se o 'country' do segundo objeto não existir no primeiro, isso para cada elemento dentro de 'country', Se um dois 'country' tiver vazio é para voltar 'null' primeiro valor depois uma mensagem se é o primeiro ou segundo objeto que tá vazio ou são os dois.
Em 'ratings' vai compara as duas durações, se forem iguais é para voltar 'true' como priemiro valor depois o 'ratings' do segundo objeto, e depois um sinal de '='. Se forem diferente é para voltar 'false' como primeiro valor depois o 'ratings' do segundo objeto, e depois um sinal de '<' ou '>' depedendo se o 'ratings' do segundo objeto foi antes ou depois do 'ratings' do primeiro objeto. Se um dois 'ratings' tiver vazio é para voltar 'null' primeiro valor depois uma mensagem se é o primeiro ou segundo objeto que tá vazio ou são os dois e treciero voltar '---'.
Em 'boxOffice' vai compara as duas durações, se forem iguais é para voltar 'true' como priemiro valor depois o 'boxOffice' do segundo objeto, e depois um sinal de '='. Se forem diferente é para voltar 'false' como primeiro valor depois o 'boxOffice' do segundo objeto, e depois um sinal de '<' ou '>' depedendo se o 'boxOffice' do segundo objeto foi antes ou depois do 'boxOffice' do primeiro objeto. Se um dois 'boxOffice' tiver vazio é para voltar 'null' primeiro valor depois uma mensagem se é o primeiro ou segundo objeto que tá vazio ou são os dois e treciero voltar '---'.
Em 'production' pode ter mais que um, então precisa compara todos os elementos em 'production', e retornar 'true' ou 'false' e o nome de um 'production' do segundo objeto, 'true' se o 'production' do segundo objeto tambem existir no primeiro, e 'false' se o 'production' do segundo objeto não existir no primeiro, isso para cada elemento dentro de 'production', Se um dois 'production' tiver vazio é para voltar 'null' primeiro valor depois uma mensagem se é o primeiro ou segundo objeto que tá vazio ou são os dois.
